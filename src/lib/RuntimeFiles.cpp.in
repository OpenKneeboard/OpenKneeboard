#include <OpenKneeboard/RuntimeFiles.h>

namespace OpenKneeboard::RuntimeFiles {

const std::filesystem::path DCSWORLD_HOOK_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-dcs-ext-dll>");

const std::filesystem::path DCSWORLD_HOOK_LUA(
  "$<TARGET_PROPERTY:OpenKneeboard-dcs-ext-lua,OUTPUT_NAME>");

const std::filesystem::path AUTOINJECT_MARKER_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-AutoInject-Marker>");

const std::filesystem::path INJECTION_BOOTSTRAPPER_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-Injection-Bootstrapper>");

const std::filesystem::path TABLET_PROXY_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-TabletProxy>");

const std::filesystem::path NON_VR_D3D11_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-nonvr-d3d11>");

const std::filesystem::path OCULUS_D3D11_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-oculus-d3d11>");

const std::filesystem::path OCULUS_D3D12_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-oculus-d3d12>");

const std::filesystem::path OPENXR_DLL(
  "$<TARGET_FILE_NAME:OpenKneeboard-OpenXR>");

const std::filesystem::path OPENXR_JSON("OpenKneeboard-OpenXR.json");

const std::filesystem::path OPENXR_REGISTER_LAYER_HELPER(
  "$<TARGET_FILE_NAME:OpenKneeboard-OpenXR-Helper>");
}
